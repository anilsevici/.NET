#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DepoTakip
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DEPOTAKİP")]
	public partial class DeposDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertDEPO(DEPO instance);
    partial void UpdateDEPO(DEPO instance);
    partial void DeleteDEPO(DEPO instance);
    partial void InsertDEPOCONTAIN(DEPOCONTAIN instance);
    partial void UpdateDEPOCONTAIN(DEPOCONTAIN instance);
    partial void DeleteDEPOCONTAIN(DEPOCONTAIN instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertMOVEMENT(MOVEMENT instance);
    partial void UpdateMOVEMENT(MOVEMENT instance);
    partial void DeleteMOVEMENT(MOVEMENT instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertURUNMUADIL(URUNMUADIL instance);
    partial void UpdateURUNMUADIL(URUNMUADIL instance);
    partial void DeleteURUNMUADIL(URUNMUADIL instance);
    #endregion
		
		public DeposDataContext() : 
				base(global::DepoTakip.Properties.Settings.Default.DEPOTAKİPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DeposDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DeposDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DeposDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DeposDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<DEPO> DEPOs
		{
			get
			{
				return this.GetTable<DEPO>();
			}
		}
		
		public System.Data.Linq.Table<DEPOCONTAIN> DEPOCONTAINs
		{
			get
			{
				return this.GetTable<DEPOCONTAIN>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<MOVEMENT> MOVEMENTs
		{
			get
			{
				return this.GetTable<MOVEMENT>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<URUNMUADIL> URUNMUADILs
		{
			get
			{
				return this.GetTable<URUNMUADIL>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_id;
		
		private string _CategoryName;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_idChanging(int value);
    partial void OnCategory_idChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public CATEGORY()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Category_id
		{
			get
			{
				return this._Category_id;
			}
			set
			{
				if ((this._Category_id != value))
				{
					this.OnCategory_idChanging(value);
					this.SendPropertyChanging();
					this._Category_id = value;
					this.SendPropertyChanged("Category_id");
					this.OnCategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_PRODUCTs", ThisKey="Category_id", OtherKey="Category_id")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPO")]
	public partial class DEPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Depo_id;
		
		private string _DepoName;
		
		private string _Adress;
		
		private string _City;
		
		private string _Country;
		
		private string _Phone;
		
		private System.DateTime _Created_at;
		
		private string _Picture;
		
		private int _MaxKapasite;
		
		private string _Employee_id;
		
		private EntitySet<DEPOCONTAIN> _DEPOCONTAINs;
		
		private EntitySet<MOVEMENT> _MOVEMENTs;
		
		private EntitySet<MOVEMENT> _MOVEMENTs1;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepo_idChanging(int value);
    partial void OnDepo_idChanged();
    partial void OnDepoNameChanging(string value);
    partial void OnDepoNameChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCreated_atChanging(System.DateTime value);
    partial void OnCreated_atChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnMaxKapasiteChanging(int value);
    partial void OnMaxKapasiteChanged();
    partial void OnEmployee_idChanging(string value);
    partial void OnEmployee_idChanged();
    #endregion
		
		public DEPO()
		{
			this._DEPOCONTAINs = new EntitySet<DEPOCONTAIN>(new Action<DEPOCONTAIN>(this.attach_DEPOCONTAINs), new Action<DEPOCONTAIN>(this.detach_DEPOCONTAINs));
			this._MOVEMENTs = new EntitySet<MOVEMENT>(new Action<MOVEMENT>(this.attach_MOVEMENTs), new Action<MOVEMENT>(this.detach_MOVEMENTs));
			this._MOVEMENTs1 = new EntitySet<MOVEMENT>(new Action<MOVEMENT>(this.attach_MOVEMENTs1), new Action<MOVEMENT>(this.detach_MOVEMENTs1));
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depo_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Depo_id
		{
			get
			{
				return this._Depo_id;
			}
			set
			{
				if ((this._Depo_id != value))
				{
					this.OnDepo_idChanging(value);
					this.SendPropertyChanging();
					this._Depo_id = value;
					this.SendPropertyChanged("Depo_id");
					this.OnDepo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepoName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DepoName
		{
			get
			{
				return this._DepoName;
			}
			set
			{
				if ((this._DepoName != value))
				{
					this.OnDepoNameChanging(value);
					this.SendPropertyChanging();
					this._DepoName = value;
					this.SendPropertyChanged("DepoName");
					this.OnDepoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", DbType="DateTime NOT NULL")]
		public System.DateTime Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxKapasite", DbType="Int NOT NULL")]
		public int MaxKapasite
		{
			get
			{
				return this._MaxKapasite;
			}
			set
			{
				if ((this._MaxKapasite != value))
				{
					this.OnMaxKapasiteChanging(value);
					this.SendPropertyChanging();
					this._MaxKapasite = value;
					this.SendPropertyChanged("MaxKapasite");
					this.OnMaxKapasiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployee_idChanging(value);
					this.SendPropertyChanging();
					this._Employee_id = value;
					this.SendPropertyChanged("Employee_id");
					this.OnEmployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPO_DEPOCONTAIN", Storage="_DEPOCONTAINs", ThisKey="Depo_id", OtherKey="Depo_id")]
		public EntitySet<DEPOCONTAIN> DEPOCONTAINs
		{
			get
			{
				return this._DEPOCONTAINs;
			}
			set
			{
				this._DEPOCONTAINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPO_MOVEMENT", Storage="_MOVEMENTs", ThisKey="Depo_id", OtherKey="From_move")]
		public EntitySet<MOVEMENT> MOVEMENTs
		{
			get
			{
				return this._MOVEMENTs;
			}
			set
			{
				this._MOVEMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPO_MOVEMENT1", Storage="_MOVEMENTs1", ThisKey="Depo_id", OtherKey="to_move")]
		public EntitySet<MOVEMENT> MOVEMENTs1
		{
			get
			{
				return this._MOVEMENTs1;
			}
			set
			{
				this._MOVEMENTs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_DEPO", Storage="_EMPLOYEE", ThisKey="Employee_id", OtherKey="Employee_TCNO", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.DEPOs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.DEPOs.Add(this);
						this._Employee_id = value.Employee_TCNO;
					}
					else
					{
						this._Employee_id = default(string);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPOCONTAINs(DEPOCONTAIN entity)
		{
			this.SendPropertyChanging();
			entity.DEPO = this;
		}
		
		private void detach_DEPOCONTAINs(DEPOCONTAIN entity)
		{
			this.SendPropertyChanging();
			entity.DEPO = null;
		}
		
		private void attach_MOVEMENTs(MOVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.DEPO = this;
		}
		
		private void detach_MOVEMENTs(MOVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.DEPO = null;
		}
		
		private void attach_MOVEMENTs1(MOVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.DEPO1 = this;
		}
		
		private void detach_MOVEMENTs1(MOVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.DEPO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPOCONTAIN")]
	public partial class DEPOCONTAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Depo_id;
		
		private int _Product_id;
		
		private int _Quantity;
		
		private System.DateTime _Created_at;
		
		private EntityRef<DEPO> _DEPO;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepo_idChanging(int value);
    partial void OnDepo_idChanged();
    partial void OnProduct_idChanging(int value);
    partial void OnProduct_idChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCreated_atChanging(System.DateTime value);
    partial void OnCreated_atChanged();
    #endregion
		
		public DEPOCONTAIN()
		{
			this._DEPO = default(EntityRef<DEPO>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depo_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Depo_id
		{
			get
			{
				return this._Depo_id;
			}
			set
			{
				if ((this._Depo_id != value))
				{
					if (this._DEPO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepo_idChanging(value);
					this.SendPropertyChanging();
					this._Depo_id = value;
					this.SendPropertyChanged("Depo_id");
					this.OnDepo_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", DbType="DateTime NOT NULL")]
		public System.DateTime Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPO_DEPOCONTAIN", Storage="_DEPO", ThisKey="Depo_id", OtherKey="Depo_id", IsForeignKey=true)]
		public DEPO DEPO
		{
			get
			{
				return this._DEPO.Entity;
			}
			set
			{
				DEPO previousValue = this._DEPO.Entity;
				if (((previousValue != value) 
							|| (this._DEPO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPO.Entity = null;
						previousValue.DEPOCONTAINs.Remove(this);
					}
					this._DEPO.Entity = value;
					if ((value != null))
					{
						value.DEPOCONTAINs.Add(this);
						this._Depo_id = value.Depo_id;
					}
					else
					{
						this._Depo_id = default(int);
					}
					this.SendPropertyChanged("DEPO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DEPOCONTAIN", Storage="_PRODUCT", ThisKey="Product_id", OtherKey="Product_id", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.DEPOCONTAINs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.DEPOCONTAINs.Add(this);
						this._Product_id = value.Product_id;
					}
					else
					{
						this._Product_id = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Employee_TCNO;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Adress;
		
		private string _picture;
		
		private string _username;
		
		private string _password;
		
		private bool _admin_mi;
		
		private EntitySet<DEPO> _DEPOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_TCNOChanging(string value);
    partial void OnEmployee_TCNOChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onadmin_miChanging(bool value);
    partial void Onadmin_miChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._DEPOs = new EntitySet<DEPO>(new Action<DEPO>(this.attach_DEPOs), new Action<DEPO>(this.detach_DEPOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_TCNO", DbType="NVarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Employee_TCNO
		{
			get
			{
				return this._Employee_TCNO;
			}
			set
			{
				if ((this._Employee_TCNO != value))
				{
					this.OnEmployee_TCNOChanging(value);
					this.SendPropertyChanging();
					this._Employee_TCNO = value;
					this.SendPropertyChanged("Employee_TCNO");
					this.OnEmployee_TCNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(100)")]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_mi", DbType="Bit NOT NULL")]
		public bool admin_mi
		{
			get
			{
				return this._admin_mi;
			}
			set
			{
				if ((this._admin_mi != value))
				{
					this.Onadmin_miChanging(value);
					this.SendPropertyChanging();
					this._admin_mi = value;
					this.SendPropertyChanged("admin_mi");
					this.Onadmin_miChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_DEPO", Storage="_DEPOs", ThisKey="Employee_TCNO", OtherKey="Employee_id")]
		public EntitySet<DEPO> DEPOs
		{
			get
			{
				return this._DEPOs;
			}
			set
			{
				this._DEPOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPOs(DEPO entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_DEPOs(DEPO entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MOVEMENT")]
	public partial class MOVEMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _From_move;
		
		private int _to_move;
		
		private int _Product_id;
		
		private int _Quantity;
		
		private System.DateTime _Created_at;
		
		private EntityRef<DEPO> _DEPO;
		
		private EntityRef<DEPO> _DEPO1;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFrom_moveChanging(int value);
    partial void OnFrom_moveChanged();
    partial void Onto_moveChanging(int value);
    partial void Onto_moveChanged();
    partial void OnProduct_idChanging(int value);
    partial void OnProduct_idChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCreated_atChanging(System.DateTime value);
    partial void OnCreated_atChanged();
    #endregion
		
		public MOVEMENT()
		{
			this._DEPO = default(EntityRef<DEPO>);
			this._DEPO1 = default(EntityRef<DEPO>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From_move", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int From_move
		{
			get
			{
				return this._From_move;
			}
			set
			{
				if ((this._From_move != value))
				{
					if (this._DEPO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFrom_moveChanging(value);
					this.SendPropertyChanging();
					this._From_move = value;
					this.SendPropertyChanged("From_move");
					this.OnFrom_moveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_move", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int to_move
		{
			get
			{
				return this._to_move;
			}
			set
			{
				if ((this._to_move != value))
				{
					if (this._DEPO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onto_moveChanging(value);
					this.SendPropertyChanging();
					this._to_move = value;
					this.SendPropertyChanged("to_move");
					this.Onto_moveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", DbType="DateTime NOT NULL")]
		public System.DateTime Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPO_MOVEMENT", Storage="_DEPO", ThisKey="From_move", OtherKey="Depo_id", IsForeignKey=true)]
		public DEPO DEPO
		{
			get
			{
				return this._DEPO.Entity;
			}
			set
			{
				DEPO previousValue = this._DEPO.Entity;
				if (((previousValue != value) 
							|| (this._DEPO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPO.Entity = null;
						previousValue.MOVEMENTs.Remove(this);
					}
					this._DEPO.Entity = value;
					if ((value != null))
					{
						value.MOVEMENTs.Add(this);
						this._From_move = value.Depo_id;
					}
					else
					{
						this._From_move = default(int);
					}
					this.SendPropertyChanged("DEPO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPO_MOVEMENT1", Storage="_DEPO1", ThisKey="to_move", OtherKey="Depo_id", IsForeignKey=true)]
		public DEPO DEPO1
		{
			get
			{
				return this._DEPO1.Entity;
			}
			set
			{
				DEPO previousValue = this._DEPO1.Entity;
				if (((previousValue != value) 
							|| (this._DEPO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPO1.Entity = null;
						previousValue.MOVEMENTs1.Remove(this);
					}
					this._DEPO1.Entity = value;
					if ((value != null))
					{
						value.MOVEMENTs1.Add(this);
						this._to_move = value.Depo_id;
					}
					else
					{
						this._to_move = default(int);
					}
					this.SendPropertyChanged("DEPO1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_MOVEMENT", Storage="_PRODUCT", ThisKey="Product_id", OtherKey="Product_id", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.MOVEMENTs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.MOVEMENTs.Add(this);
						this._Product_id = value.Product_id;
					}
					else
					{
						this._Product_id = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_id;
		
		private string _ProductName;
		
		private System.Nullable<int> _Category_id;
		
		private System.Nullable<int> _Quantity;
		
		private string _Picture;
		
		private EntitySet<DEPOCONTAIN> _DEPOCONTAINs;
		
		private EntitySet<MOVEMENT> _MOVEMENTs;
		
		private EntitySet<URUNMUADIL> _URUNMUADILs;
		
		private EntitySet<URUNMUADIL> _URUNMUADILs1;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_idChanging(int value);
    partial void OnProduct_idChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnCategory_idChanging(System.Nullable<int> value);
    partial void OnCategory_idChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    #endregion
		
		public PRODUCT()
		{
			this._DEPOCONTAINs = new EntitySet<DEPOCONTAIN>(new Action<DEPOCONTAIN>(this.attach_DEPOCONTAINs), new Action<DEPOCONTAIN>(this.detach_DEPOCONTAINs));
			this._MOVEMENTs = new EntitySet<MOVEMENT>(new Action<MOVEMENT>(this.attach_MOVEMENTs), new Action<MOVEMENT>(this.detach_MOVEMENTs));
			this._URUNMUADILs = new EntitySet<URUNMUADIL>(new Action<URUNMUADIL>(this.attach_URUNMUADILs), new Action<URUNMUADIL>(this.detach_URUNMUADILs));
			this._URUNMUADILs1 = new EntitySet<URUNMUADIL>(new Action<URUNMUADIL>(this.attach_URUNMUADILs1), new Action<URUNMUADIL>(this.detach_URUNMUADILs1));
			this._CATEGORY = default(EntityRef<CATEGORY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", AutoSync=AutoSync.OnInsert, DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_id", DbType="Int")]
		public System.Nullable<int> Category_id
		{
			get
			{
				return this._Category_id;
			}
			set
			{
				if ((this._Category_id != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_idChanging(value);
					this.SendPropertyChanging();
					this._Category_id = value;
					this.SendPropertyChanged("Category_id");
					this.OnCategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_DEPOCONTAIN", Storage="_DEPOCONTAINs", ThisKey="Product_id", OtherKey="Product_id")]
		public EntitySet<DEPOCONTAIN> DEPOCONTAINs
		{
			get
			{
				return this._DEPOCONTAINs;
			}
			set
			{
				this._DEPOCONTAINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_MOVEMENT", Storage="_MOVEMENTs", ThisKey="Product_id", OtherKey="Product_id")]
		public EntitySet<MOVEMENT> MOVEMENTs
		{
			get
			{
				return this._MOVEMENTs;
			}
			set
			{
				this._MOVEMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_URUNMUADIL", Storage="_URUNMUADILs", ThisKey="Product_id", OtherKey="Product_id")]
		public EntitySet<URUNMUADIL> URUNMUADILs
		{
			get
			{
				return this._URUNMUADILs;
			}
			set
			{
				this._URUNMUADILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_URUNMUADIL1", Storage="_URUNMUADILs1", ThisKey="Product_id", OtherKey="Muadil_id")]
		public EntitySet<URUNMUADIL> URUNMUADILs1
		{
			get
			{
				return this._URUNMUADILs1;
			}
			set
			{
				this._URUNMUADILs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRODUCT", Storage="_CATEGORY", ThisKey="Category_id", OtherKey="Category_id", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._Category_id = value.Category_id;
					}
					else
					{
						this._Category_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPOCONTAINs(DEPOCONTAIN entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_DEPOCONTAINs(DEPOCONTAIN entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_MOVEMENTs(MOVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_MOVEMENTs(MOVEMENT entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_URUNMUADILs(URUNMUADIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_URUNMUADILs(URUNMUADIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_URUNMUADILs1(URUNMUADIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT1 = this;
		}
		
		private void detach_URUNMUADILs1(URUNMUADIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.URUNMUADIL")]
	public partial class URUNMUADIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_id;
		
		private int _Muadil_id;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
		private EntityRef<PRODUCT> _PRODUCT1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_idChanging(int value);
    partial void OnProduct_idChanged();
    partial void OnMuadil_idChanging(int value);
    partial void OnMuadil_idChanged();
    #endregion
		
		public URUNMUADIL()
		{
			this._PRODUCT = default(EntityRef<PRODUCT>);
			this._PRODUCT1 = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Muadil_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Muadil_id
		{
			get
			{
				return this._Muadil_id;
			}
			set
			{
				if ((this._Muadil_id != value))
				{
					if (this._PRODUCT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMuadil_idChanging(value);
					this.SendPropertyChanging();
					this._Muadil_id = value;
					this.SendPropertyChanged("Muadil_id");
					this.OnMuadil_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_URUNMUADIL", Storage="_PRODUCT", ThisKey="Product_id", OtherKey="Product_id", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.URUNMUADILs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.URUNMUADILs.Add(this);
						this._Product_id = value.Product_id;
					}
					else
					{
						this._Product_id = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_URUNMUADIL1", Storage="_PRODUCT1", ThisKey="Muadil_id", OtherKey="Product_id", IsForeignKey=true)]
		public PRODUCT PRODUCT1
		{
			get
			{
				return this._PRODUCT1.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT1.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT1.Entity = null;
						previousValue.URUNMUADILs1.Remove(this);
					}
					this._PRODUCT1.Entity = value;
					if ((value != null))
					{
						value.URUNMUADILs1.Add(this);
						this._Muadil_id = value.Product_id;
					}
					else
					{
						this._Muadil_id = default(int);
					}
					this.SendPropertyChanged("PRODUCT1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
